# coding:utf8
import json

import time

import logging
from scrapy import FormRequest
from scrapy import Request
from scrapy.cmdline import execute
from scrapy.spiders import CrawlSpider

from ISpider.item.ModelItem import ModelItem
from ISpider.model.che168_ranke import RankInfo
from ISpider.resource.crawling_params import CRAWLING_CITIES, CRAWLING_SERIES, CRAWLING_PRICE
from ISpider.settings import RESOURCE_DIR

__author__ = 'guangde'

mode = {
    'city'  : 1,
    'series': 2,
    'price' : 3,
}

PAGE_SIZE = 24

wrong_list = ['AFG465546ASDF4564',
'ASZXDXXED55254856',
'ASD4528963TH42188',
'BJJ8469HBDJ846694',
'CDXDK160106A68776',
'BVHJH976577668797',
'BDJSJWBUSBEU72837',
'BVGHH975688656787',
'BJK846VDJ84697496',
'CESFRCFFDCG356779',
'CFPM4ACC591E48231',
'CFPH4ABC491A83785',
'CFPM4ACC3F1A05197',
'FGHF4578356886546',
'F72H4ACC081A21661',
'CFPH5ABC469041821',
'FGTXZ1ADJ15438524',
'DGJGCRHH578YH6888',
'FLPM4ACC281A62493',
'GHBVFFCC785412369',
'GHJSJDBDJCHD73837',
'FLPM5ACP7P1A77384',
'GGHHHJYYHHHJJ4555',
'GMJ4952GWJ4956267',
'HFSRGVS5326090064',
'GJJHUHHGFFJJN8665',
'HDHHD645567664665',
'HDKN846BDJ8494843',
'GLMKD2G5CR5520196',
'JGFF8888888888888',
'HESC455HFC4480558',
'GJGHDUFFG55637698',
'GSUAF629461836827',
'JDK848JD846BD6496',
'HGLM5609871054389',
'GUJG56D5GGB556872',
'JKHDS1234656JK232',
'JJ144ACC7A1A15151',
'HDJ549NH846499496',
'JM5BL04R5A3332105',
'JGYBK174629283666',
'JDHH3645649675546',
'GZSM2ZGN67G276495',
'JM7GG443551157696',
'KDK67766764566685',
'GHHBB565588899478',
'L1367293947391046',
'L1234567891234567',
'L1FAB56DAF7654123',
'JM7GG443551157696',
'KFPM4ACC8C1E06213',
'JSHHDJ31254675546',
'KSUEBFA8641444700',
'LAWGM7952PWJ49562',
'LBD3GD2ET5D136654',
'JM6BL04Z1B2245115',
'LADC2NGT578497846',
'LBBDB11B2BD410964',
'LBED4925GW4926894',
'LBVDB11B8AD287881',
'LBEHDAE1309Y23569',
'LDF450646E5598462',
'LBDE9542WA9542685',
'L234JSW23JWZY0012',
'LDB634MAGD3G12336',
'L4784488447856787',
'LBEF9452GW9464264',
'LBDDHNVXGJ6758958',
'LBEMCZG86JM257852',
'LDFGHHHVVVCFFF458',
'LDGHBBBBBBB425668',
'LDGHGVVDFFGGH5326',
'LDAA6678287788876',
'LDHF5439184316816',
'LEFCVHJJJZGGGG123',
'LEPH4ABC071A23641',
'LEH513BRJ81873131',
'LEPH4ABC381A84098',
'LEP84ACC5E1A40436',
'LE425789654287639',
'LBH5846VV3J881669',
'LE5W3ANE7BB057816',
'LEPAA4ACC4B1E4675',
'LEPH4ABC491A00713',
'LEPH4ABC481E08093',
'LEPH4ABC391E19930',
'LEPH4ABCX91A24434',
'LEPH4ABC059035077',
'LEBAG6A3CD65D4687',
'LEPH4ABC291A30275',
'LEPH4ACC6A1E85357',
'LEPH4ACC9B1A35123',
'LEPH5ABC139023210',
'LEPH4ACC1A1A11722',
'LEPH4ABC691A38458',
'LEPH5ABC349015479',
'LDSAF321456789063',
'LEPH5ABC349010217',
'LEPH4ACCX91E19275',
'LEPH4ABC871A50401',
'LEPH4ACC591A52687',
'LEPH5ABC639024255',
'LEPH5ABC769042946',
'LEPH5ABC939027828',
'LEPH5ABC359039508',
'LEPH5ABC639023994',
'LEPM4ACC0A1E34824',
'LEPM4ACC0C1A84999',
'LEPM4ACC0C1E11403',
'LEPM4ACC0F1A48234',
'LEPM4ACC0A1F09392',
'LEPH4ABC381A88037',
'LEPH5ABC249006904',
'LEPM4ACC1E1A40822',
'LEPM4ACC1C1E00071',
'LEPM4ACC191E59761',
'LEPH4ABC581A82028',
'LEPM4ACC1C1A26903',
'LEPM4ACC1D1A38907',
'LEPM4ACC2A1E38650',
'LEPM4ACC291A40351',
'LEPH5ABC379017074',
'LEPM4ACC2B1A53588',
'LEPM4ACC3A1A61844',
'LEPH5ABC579019408',
'LEPM4ACC4A1E18612',
'LEPM4ACC4B1A15943',
'LEPM4ACC4B1E46654',
'LEPM4ACC481A22836',
'LEPM4ACC4C1A73899',
'LEPM4ACC1D1A50054',
'LEPM4ACC4A1E48645',
'LEPM4ACC4F1A88140',
'LEPM4ACC591F70827',
'LEPM4ACC4A1E91463',
'LEPM4ACC291A46540',
'LEPM4ACC2A1E38650',
'LEPM4ACC2B1A09039',
'LEPM4ACC4E1E05106',
'LEPM4ACC4D1A18568',
'LEPM4ACC5A1E88250',
'LEPM4ACC5C1A61573',
'LEPM4ACC5E1A20637',
'LEPM4ACC5F1A42736',
'LEPM4ACC5A1A47055',
'LEPM4ACC5D1A34861',
'LEPM4ACC691E72652',
'LEPM4ACC5C1A85422',
'LEPM4ACC5C1A85579',
'LEPM4ACC791E15795',
'LEPM4ACC6C1A75269',
'LEPM4ACC791E39952',
'LEPM4ACC8A1F36341',
'LEPM4ACC8B1A34687',
'LEPM4ACC791A92977',
'LEPM4ACC6D1A51846',
'LEPM4ACC8B1A60058',
'LEPM4ACC8B1A76597',
'LEPM4ACC3E1A04274',
'LEPM4ACC4E1A85592',
'LEPM4ACC7A1E98083',
'LEPM4ACC5F1A01619',
'LEPM4ACC8C1A85480',
'LEPM4ACC8D1A17648',
'LEPM4ACC7D1A15664',
'LEPM4ACC7D1A53573',
'LEPM4ACC9A1E90289',
'LEPM4ACC9D1A63408',
'LEPM4ACC9F1A74444',
'LEPM4ACCCA1F12034',
'LEPM4ACC8B1E34149',
'LEPM4ACC8C1A90338',
'LEPM4ACCXA1F08489',
'LEPM4ACC9A1A38472',
'LEPM4ACCXB1E48179',
'LEPM4ACCXA1E06819',
'LEPM4ACCXD1E12365',
'LEPM4ACCX91A69886',
'LEPM4ACP2A1A53169',
'LEPM4ACC8B1E41280',
'LEPM4ACC8E1A94134',
'LEPM4ACP4B1A47553',
'LEPM4ACCXD1A89404',
'LEPM4ACP1A1A08532',
'LEPM4ACP6B1E34847',
'LEPM4ACC9D1E19887',
'LEPM4ACP2E1A13650',
'LEPM4ACP7D1A36825',
'LEPM4ACP3D1A18547',
'LEPM4ACP7B1A73077',
'LEPM4ACC9B1A90928',
'LEPM4ACP9A1A34909',
'LEPM4ACP9B1A14113',
'LEPM4ACP8B1E30430',
'LEPM4ACP791E68788',
'LEPM4ACP8B1A73072',
'LEPM4ACPXA1F35646',
'LEPM4ADP381A16141',
'LEPM4AD80A1F11614',
'LEPM4ADP0D1A82771',
'LEPM4ACP4D1A11526',
]

finish = ['LFPH4ABC179005864', 'LFPH4ABC181A43792', 'LFP84ACE0F1A65005', 'LFPH4ABC459022798', 'LFPH4ABC371A25373', 'LFPH4ABC381A29764', 'LFPH4ABC259048316', 'LFP84ACE4E1A31437', 'LFPH4ABC181E10948', 'LFP84ACC5D1A39768', 'JM7CR10F880301968', 'LFPH4ABC159017820', 'LFPH4ABC159032267', 'LFPH4ABC281A32221', 'LFPH4ABC391A57338', 'LFPH4ABC171A13738', 'LFPH4ABC391A02047', 'LFP84ACP2C1D40788', 'LFPH4ABC479010654', 'LFPH4ABC469043460', 'LFPH4ABC081A92871', 'LFP84ACCXC1A75664', 'LFP84ACE5C1A63195', 'LFPH4ABC071A12032', 'LFPH4ABC171A53348', 'LFPH4ABC159039871', 'LFPH4ABC069006986', 'LFPH4ABC469040770', 'LFP84ACE8E1E16547', 'LFPH4ABC179016847', 'LFPH4ABC391A86533', 'LFPH4ABC271A01758', 'LFPH4ABC191A05884', 'LFPH4ABC481E06313', 'LFPH4ABC169025370', 'LFPH4ABC371A03759', 'LFPH4ABC291A87009', 'LFPH4ABC0A1A07811', 'LFPH4ABC481A37467', 'LFP84ACE7E1A36938', 'LFP84ACEXD1A09845', 'LFPH4ABC471A25110', 'LFP84ACE1E1E15899', 'LFPH4ABC381E08540', 'LFPH4ABC291A08972', 'LFPH4ABC371A23221', 'LFPH4ABC169025272', 'LFPH4ABC371A05589', 'LFPH4ABC091A52923', 'LFPH4ABC169014112', 'LFPH4ABC379006045', 'LFPH4ABC179011809', 'LFPH4ABC359045411', 'LFPH4ABC191A16268', 'LFPH4ABC179003046', 'LFPH4ABC281A25138', 'LFPH4ABC381E06402', 'LFP84ACE5E1A16638', 'LFP84ACC9D1A35612', 'LFPH4ABC371A47079', 'LFPH4ABC379007583', 'LFPH4ABC481E01158', 'LFPH4ABC071A59691', 'LFPH4ABC371A11179', 'LFPH4ABC359032254', 'LFPH4ABC269003989', 'LFPH4ABC281A98025', 'LFPH4ABC269047698', 'LFPH4ABC381A06436', 'LFPH4ABC469032300', 'LFPH4ABC159008924', 'LFPH4ABC471A50508', 'LFPH4ABC479005356', 'LFPH4ABC281E08366', 'LFPH4ABC181A94466', 'LFPH4ABC481A56102', 'LFPH4ABC4A1B00086', 'LFPH4ABC071A08689', 'LFPH4ABC371A42822', 'LFP84ACP7C1A99973', 'LFPH4ABC379018325', 'LFPH4ABC369026049', 'LFPH4ABC269039424', 'LFPH4ABC279018560', 'LFPH4ABC179012295', 'LFP84ACP6C1A57049', 'LFPH4ABC479014008', 'LFPH4ABC269049743', 'LFP84ACC5F1A76614', 'LFPH4ABC271A49485', 'LFPH4ABC281A21168', 'LFPH4ABC391A32827', 'LFPH4ABC159045648', 'LFPH4ABC481A90301', 'LFP84ACC1C1A74600', 'LFP84ACE1E1E01162', 'LFPH4ABC481A68136', 'LFPH4ABC091A91981', 'LFPH4ABC481A46637', 'LFPH4ABC281A88725', 'LFPH4ABC371A28676', 'LFPH4ABC491A38913', 'LFPH4ABC181A05205', 'LFP84ACC9D1A11004', 'LFPH4ABC091A65770', 'LFP84ACP3C1E00805', 'LFPH4ABC459012314', 'LFPH4ABC1A1A28182', 'LFPH4ABC381A95182', 'LFP84ACP7D1A37152', 'LFPH4ABC481A98799', 'LFPH4ABC069018250', 'LFPH4ABC481A94557', 'LFPH4ABC491A02431', 'LFPH4ABC159044869', 'LFPH4ABC491A28348', 'LFPH4ABC359030245', 'LFP84ACP8D1A21686', 'LFPH4ABC171A37229', 'LFPH4ABC281A59869', 'LFPH4ABC191A37850', 'LFPH4ABC171A23539', 'LFPH4ABC081A89226', 'LFP84ACP5D1E07773', 'LFPH4ABC059004931', 'LFPH4ABC171A15747', 'LFPH4ABC191A30512', 'LFPH4ABC091A01924', 'LFPH4ABC469010393', 'LFPH4ABC469027596', 'LFPH4ABC269017200', 'LFPH4ABC281A10591', 'LFP84ACE6E1A42777', 'LFPH4ABC479006829', 'LFPH4ABC091A29867', 'LFPH4ABC081E11329', 'LFPH4ABC469008322', 'LFPH4ABC091A24510', 'LFPH4ABC269006438', 'LFPH4ABC279007154', 'LFPH4ABC381A37296', 'LFPH4ABC071A02147', 'LFPH4ABC481A29417', 'LFPH4ABC091A17377', 'L6T7824S7DN111945', 'LFPH4ABC459035101', 'LFP84ACEXC1A95222', 'LFPH4ABC069050602', 'LFPH4ABC0A1E48628', 'LFP84ACE9E1E07937', 'LFPH4ABC181A17886', 'LFP84ACE2E1A47474', 'LFP84ACE6E1A69266', 'LFPH4ABC269047586', 'LFPH4ABC281A37385', 'LFPH4ABC481A40191', 'LFPH4ABC3A1A92806', 'LFPH4ABC271A50118', 'LFPH4ABC069028051', 'LFPH4ABC081A46473', 'LFPH4ABC169005622', 'LFP84ACP4F1A61024', 'LFPH4ABC459050830', 'LFPH4ABC091A05410', 'LFP84ACC1C1A65203', 'LFPH4ABC291A12889', 'LFP84ACE6F1A08209', 'LFP84ACC2F1A32408', 'LFP84ACP1D1A11307', 'LFPH4ABC259003165', 'LFPH4ABC181A21128', 'LFPH4ABC191A34218', 'LFPH4ABC381A45060', 'LFPH4ABC359011484', 'LDCC41L33B1563310', 'LFP84ACC3F1A26522', 'LFPH4ABC481A13783', 'LFPH4ABC359039253', 'LFPH4ABC391A23190', 'LFP84ACE4E1A28523', 'LFPH4ABC391B99051', 'LFPH4ABC071A28991', 'LFPH4ABC169010285', 'LFPH4ABC371A46711', 'LFP84ACC1D1A45938', 'LFPH4ABC091A04158', 'LFPH4ABC469013536', 'LFPH4ABC459014118', 'LFPH4ABC481A78987', 'LFPH4ABC479001386', 'LFPH4ABC369004570', 'LFPH4ABC069026591', 'LFPH4ABC479009214', 'LFPH4ABC481A40661', 'LFPH4ABC391A18703', 'LFPH4ABC379009883', 'LFP84ACC1D1A30579', 'LFPH4ABC179004990', 'LFPH4ABC0A1A06321', 'LFP84ACE8E1E14944', 'LBV3M2105DMC05383', 'LFPH4ABC459043196', 'LFPH4ABC091A22210', 'LFPH4ABC481A24010', 'LFPH4ABC271A56825', 'LFPH4ABC091A87087', 'LFP84ACE2E1A28634', 'LFP84ACE2E1E17659', 'LFPH4ABC291E19899', 'LFPH4ABC381A22488', 'LFPH4ABC281A69897', 'LFP84ACEXF1A71314', 'LFPH4ABC481A28218', 'LFPH4ABC181E06530', 'LFPH4ABC371A04393', 'LFPH4ABC479000271', 'LFP84ACE8C1A78855', 'LFPH4ABC479010251', 'LFPH4ABC381A33023', 'LFP84ACE9C1A69386', 'LFPH4ABC381A23012', 'LFPH4ABC381A98969', 'LFP84ACE2E1A62100', 'LFPH4ABC181A43145', 'LFP84ACP5D1A46707', 'LFPH4ABC549032853', 'LFPH4ABC181A98713', 'LFPH4ABC371A25311', 'LFPH4ABC481A56603', 'LFPH4ABC181E11727', 'LFPH4ABC281A31411', 'LFPH4ABC071A61229', 'LFP84ACE4E1A32801', 'LFPH4ABC181A36504', 'LFPH4ABC381A96865', 'LFPH4ABC171A33444', 'LFPH4ABC091A29707', 'LFPH4ABC279007008', 'LFP84ACC3E1A72804', 'LFPH4ABC059049464', 'LFPH4ABC281A39752', 'LFPH4ABC481A16800', 'LFP84ACP2C1E04215', 'LFP84ACC4C1A76163', 'LFPH4ABC3A1A58638', 'LFPH4ABC071A21913', 'LFP84ACE1E1A31248', 'LFPH4ABC359001263', 'LFPH4ABC459033848', 'LFPH4ABC191E69791', 'LFPH4ABC269007069', 'LFPH4ABC479020570', 'LFPH4ABC381E11907', 'LFPH4ABC381A11250', 'LFPH4ABC391A88041', 'LFPH3ACC7B1D46858', 'LFPH4ABC381A88040', 'LFPH4ABC059030722', 'LFP84ACC2C1A68515', 'LFPH4ABC271A25123', 'LFPH4ABC071A52093', 'LFPH4ABC069042550', 'LFP84ACE6E1E16787', 'LFPH4ABC381E10627', 'LFPH4ABC291A08986', 'LFPH4ABC391E44276', 'LFPH4ABC471A45860', 'LFPH4ABC391A25473', 'LFPH4ABC091A28475', 'LFPH4ABC191A11300', 'LFPH4ABC359010366', 'LFPH4ABC271A39524', 'LFPH4ABC081E12156', 'LFPH4ABC081A39314', 'LFPH4ABC491A83785', 'LFPH4ABC269040900', 'LFP84ACE6C1A78384', 'LFP84ACE4D1A08092', 'LFPH4ABC381A34897', 'LFP84ACE4E1A33169', 'LFP84ACC9F1A02421', 'LFPH4ABC481E10457', 'LFPH4ABC471A50413', 'LFP84ACC7C1A97783', 'LFPH4ABC469013391', 'LFPH4ABC181A21968', 'LFPH4ABC459019206', 'LFPH4ABC271A38325', 'LFP84ACE8C1E13483', 'LFP84ACE0E1E10838', 'LFPH4ABC091A04127', 'LFP84ACE9E1A31319', 'LFP84ACE2E1A61200', 'LFPH4ABC481E08658', 'LFPH4ABC369048925', 'LFPH4ABC059017906', 'LFPH4ABC291A84434', 'LFP84ACP6E1D55913', 'LFPH4ABC281A42232', 'LFPH4ABC259002436', 'LFP84ACE8E1E14314', 'LFPH4ABC269039875', 'LFPH4ABC481A33824', 'LFPH4ABC491A32528', 'LFP84ACPXC1A97344', 'LFPH4ABC171A23363', 'LFPH4ABC371A26698', 'LFP84ACE4E1E00880', 'LFPH4ABC059001415', 'LFPH4ABC271A33481', 'LFPH4ABC469008966', 'LFPH4ABC281A56194', 'LFPH4ABC191A29621', 'LFPH4ABC371A09237', 'LFPH4ABC071A17621', 'LFP84ACC1F1A14255', 'LFPH4ABC381A81556', 'LFP84ACE2E1A79762', 'LFP84ACP8C1D39161', 'LFPH4ABC181A42481', 'LFPH4ABC191A17159', 'LFPH4ABC391A02615', 'LFPH4ABC171A11746', 'LFP84ACE4C1A51068', 'LFPH4ABC269024325', 'LFPH4ABC069050826', 'LFPH4ABC0A1A55860', 'LFPH4ABC371A26961', 'LFPH4ABC081A62236', 'LFPH4ABC3A1A24604', 'LFP84ACC2E1A86225', 'LFPH4ABC459044266', '1J4NF4FB1AD550980', 'LFPH4ABC491E89436', 'LFPH4ABC481A39302', 'LFP84ACEZE1E17659', 'LFPH4ABC181E11730', 'LFP84ACE5F1A23669', 'LFPH4ABC069004137', 'LFPH4ABC059002824', 'LFP84ACE9E1A33149', 'LFP84ACC1C1A59557', 'LFPH4ABC391A12271', 'LFPH4ABC359013588', 'LFPH4ABC381A18134', 'LFPH4ABC181A22991', 'LFPH4ABC381A51599', 'LFPH4ABC291A32432', 'LFP84ACC1F1A08570', 'LFP84ACE0E1E16476', 'LFPH4ABC091A19419', 'LFPH4ABC4A1A20285', 'LFPH4ABC281A20439', 'LFPH4ABC391A33248', 'LFPH4ABC271A46408', 'LFPH4ABC181A36406', 'LFP84ACC6D1A00901', 'LFPH4ABC471A43056', 'LFPH4ABC371A24370', 'LFPH4ABC281A49116', 'LFP84ACP0D1D24896', 'LFPH4ABC069035095', 'LFP84ACPXC1D43230', 'LFPH4ABC081A61569', 'LFPH4ABC469005422', 'LFP84ACE9E1A20952', 'LFP84ACE8E1E15978', 'LFPH4ABC481E03864', 'LFPH4ABC179005766', 'LFPH4ABC269009016', 'LFPH4ABC269044459', 'LFPH4ABC381A29828', 'LFP84ACE8E1A30775', 'LFPH4ABC291A03867', 'LFP84ACE5D1A24530', 'LFPH4ABC159015002', 'LFPH4ABC471A51075', 'LFPH4ABC479016583', 'LFPH4ABC479020147', 'LFP84ACP2D1A71371', 'LFPH4ABC181A38060', 'LFPH4ABC381A40215', 'LFPH4ABC269021652', 'LFPH4ABC091A66191', 'LFPH4ABC159041129', 'LFPH4ABC371A14518', 'LFPH4ABC471A27925', 'LFPH4ABC081A18088', 'LFPH4ABC459014281', 'LFP84ACE4E1E07537', 'LFPH4ABC091A03205', 'LFPH4ABC181A90952', 'LFPH4ABC059028940', 'LFPH4ABC281A97795', 'LFPH4ABC081A54105', 'LFPH4ABC381A49433', 'LFPH4ABC381A17453', 'LFPH4ABC371A42352', 'LFPH4ABC081A91056', 'LFPH4ABC091A47236', 'LFPH4ABC181A14342', 'LFP84ACC1E1A89942', 'LFPH4ABC279011740', 'LFPH4ABC191A16318', 'LFPH4ABC359024249', 'LFPH4ABC471A13619', 'LFPH4ABC2A1A70098', 'LFPH4ABC259045836', 'LFPH4ABC269038967', 'LFPH4ABC491A03899', 'LFPH4ABC391A32200', 'LFPH4ABC281A28038', 'LFPH4ABC181A33666', 'LFPH4ABC159031264', 'LFPH4ABC379015361', 'LFP84ACE5E1A61482', 'LFPH4ABC469012208', 'LFP84ACP1E1D11415', 'LFPH4ABC081A95222', 'LFPH4ABC469003587', 'LFP84ACC0D1A22456', 'LFPH4ABC391A04252', 'LFPH4ABC391A08687', 'LFPH4ABC049027821', 'LFP84ACC4G1A16549', 'LFP84ACE7E1E03661', 'LFPH4ABC369011812', 'LFPH4ABC281A88773', 'LFPH4ABC191A28470', 'LFPH4ABC071A32619', 'LFPH4ABC479007883', 'LFPH4ACC6A1E82541', 'LFPH4ABC481A52941', 'LFPH4ABC191E75803', 'LFP84ACP4C1A66008', 'LFPH4ABC3A1A25218', 'LFPH4ABC259008821', 'LFPH4ABC391A03330', 'LFPH4ABC279015982', 'LFP84ACC6E1A94585', 'LFP84ACE8D1A04465', 'LFPH4ABC171A25436', 'LFP84ACEXE1E04982', 'LFPH4ABC459049516', 'LFPH4ABC471A25091', 'LFPH4ABC181A22456', 'LFPH4ABC281A57815', 'LFP84ACCXE1E08870', 'LFPH4ABC379011780', 'LFPH4ABC459013177', 'LFP84ACP5C1A61822', 'LFPH4ABC391A46968', 'LFP84ACE5E1A87547', 'LFP84ACP4D1A19739', 'LFPH4ABC181A92328', 'LFPH4ABC459003717', 'LFPH4ABC181A12400', 'LFPH4ABC259024209', 'LFPH4ABC091E90597', 'LFPH4ABC181A22375', 'LFPH4ABC171A38851', 'LFP84ACC3D1A09636', 'LFPH4ABC3A1E04168', 'LFPH4ABC391A76987', 'LFPH4ABC159028672', 'LFPH4ABC471A00336', 'LFP84ACE2E1A31825', 'LFPH4ABC091A30159', 'LFPH4ABC069025280', 'LFPH4ABC181E10092', 'LFPH4ABC2A1A22486', 'LFPH4ABC071A43510', 'LFPH4ABC269001336', 'LFPH4ABC179016797', 'LFPH4ABC459032196', 'LFPH4ABC491A83477', 'LFPH4ABC281A35362', 'LFPH4ABC059027870', 'LFPH4ABC391A11721', 'LFPH4ABC059032938', 'LFP84ACE2E1A98666', 'LFPH4ABC381A44300', 'LFPH4ABC281A33918', 'LFPH4ABC181A14762', 'LFPH4ABC4A1A33120', 'LFPH4ABC369049608', 'LFPH4ABC191E05704', 'LFPH4ABC259031368', 'LFP84ACE5E1A34332', 'LFPH4ABC169010979', 'LFPH4ABC181A01638', 'LFPH4ABC059013077', 'LFPH4ABC471A41565', 'LFPH4ABC169008861', 'LFP84ACE6E1A39345', 'LFPH4ABC481A30857', 'LFPH4ABC281A93312', 'LFPH4ABC181A20710', 'LFPH4ABC4A1A06533', 'LFP84ACEXF1A05524', 'LFPH4ABC179013785', 'LFPH4ABC081A37479', 'LFPH4ABC459041920', 'LFPH4ABC381A39162', 'LFPH4ABC171A28689', 'LFPH4ABC1A1A64115', 'LFP84ACC5D1A86105', 'LFPH4ABC479004045', 'LFPH4ABC291A88435', 'LFPH4ABC159036254', 'LFPH4ABC191A13533', 'LFPH4ABC069041768', 'LFPH4ABC471A35894', 'LFPH4ABC081A27048', 'LFPH4ABC481A92677', 'LFPH4ABC149030954', 'LFP84ACC0C1A60283', 'LFPH4ABC059031398', 'LFP84ACE2E1E13840', 'LFPH4ABC3A1A35795', 'LFPH4ABC371A54503', 'LFP84ACP4D1A37187', 'LFPH4ABC159027716', 'LFPH4ABC481E06716', 'LFPH4ABC381E04813', 'LFPH4ABC259032634', 'LFPH4ABC359008438', 'LFP84ACC5D1A19598', 'LFPH4ABC381A12804', 'LFP84ACE6E1D40262', 'LFPH4ABC071A54619', 'LFPH4ABC181A13997', 'LFPH4ABC481A38022', 'LFPH4ABC171A41815', 'LFP83ACCXE1D05371', 'LFPH4ABC081A89498', 'LFPH4ABC291A25626', 'LFPH4ABC281E12109', 'LFPH4ABC481A48145', 'LFPH4ABC459044249', 'LFP84ACC0E1E05945', 'LFPH4ABC491E33903', 'LFPH4ABC069041348', 'LFPH4ABC081A87475', 'LFPH4ABC359011825', 'LFPH4ABC359019830', 'LFPH4ABC179009624', 'LFPH4ABC371A43405', 'LFPH4ABC081E00511', 'LFPH4ABC091A18786', 'LFPH4ABC091A23860', 'LFPH4ABC059035886', 'LFPH4ABC191A37413', 'LFP84ACP8C1A79327', 'LFPH4ABC391A75712', 'LFPH4ABC471A07237', 'LFPH4ABC081A62883', 'LFPH4ABC469005713', 'LFPH4ABC2A1A13786', 'LFPH4ABC059003861', 'LFPH4ABC479019709', 'LFPH4ABC091A02975', 'LFPH4ABC471A26287', 'LFPH4ABC471A60231', 'LFPH4ABC059044300', 'LFPH4ABC149026046', 'LFPH4ABC279006456', 'LFPH4ABC381A95733', 'LFP84ACP4D1S00045', 'LFPH4ABC359022100', 'LFPH4ABC369020977', 'LFPH4ABC159039817', 'LFP84ACE2E1A90924', 'LFPH4ABC271A56789', 'LFPH4ABC359044338', 'LFPH4ABC4A1E15681', 'LFPH4ABC359013784', 'LFPH4ABC469028425', 'LFPH4ABC381E12717', 'LFPH4ABC491A15664', 'LFPH4ABC181A71141', 'LFPH4ABC159017770', 'LFPH4ABC291A38912', 'LFP84ACCXC1A82016', 'LFP84ACE6E1A46389', 'LFPH4ABC491A29693', 'LFPH4ABC079011624', 'LFPH4ABC271A06555', 'LFPH4ABC291A76592', 'LFPH4ABC381A45639', 'LFPH4ABC391A04638', 'LFPH4ABC391A05675', 'LFP84ACP3E1D53665', 'LFPH4ABC191A21471', 'LFP84ACCXC1A65152', 'LFPH4ABC281E09940', 'LFPH4ABC301A21129', 'LFPH4ABC381E09560', 'LFP84ACE3C1E06277', 'LFPH4ABC071A56676', 'LFPH4ABC091E43487', 'LFPH4ABC179005606', 'LFPH4ABC369007145', 'LFP84ACE3E1A74084', 'LFP84ACP7E1D87317', 'LFP84ACP5D1D28667', 'LFPH4ABC271A13943', 'LFP84ACE7E1A81281', 'JM7CR10F6A0323456', 'LFPH4ABC271A58817', 'LFPH4ABC271A25610', 'LFPH4ABC0A1A79740', 'LFPH4ABC059030381', 'LFP84ACE4E1A99933', 'LFPH4ABC181A91468', 'LFPH4ABC381A30087', 'LFPH4ABC291A24251', 'LFPH4ABC391A22282', 'LFPH4ABC369009882', 'LFP84ACE0E1A58182', 'LFPH4ABC269018038', 'LFPH4ABC281E12661', 'LFPH4ABC491A10044', 'LFPH4ABC371A12011', 'LFPH4ABC081E04218', 'LFPH4ABC181A89607', 'LFPH4ABC1A1A47072', 'LFPH4ABC479012068', 'LFPH4ABC079002020', 'LFPH4ABC169017852', 'LFPH4ABC2A1A26473', 'LFPH4ABC191A07487', 'LFPH4ABC291A24265', 'LFP84ACC0G1D54935', 'L6T722JD25N011132', 'LFP84ACP5E1G64594', 'LFPH4ABC2A1A30930', 'LFPH4ABC059033099', 'LFPH4ABC269002180', 'LFPH4ABC469009342', 'LFPH4ABC181A08122', 'LFPH4ABC381A76812', 'LFPH4ABC081E10472', 'LFPH4ABC081A18849', 'LFPH4ABC481A45200', 'LFPH4ABC171A22262', 'LFPH4ABC181A43078', 'LFPH4ABC281A58138', 'LFPH4ABC371A52346', 'LFPH4ABC071A42597', 'LFP84ACE9E1A81086', 'LFPH4ABC181A91731', 'LFP84ACE5E1A33701', 'LFPH4ABC179001359', 'LFPH4ABC079013387', 'LFPH4ABC371A34185', 'LFP84ACE5E1E14450', 'LFPH4ABC181A43419', 'LFP84ACCXC1A97759', 'LFPH4ABC059003925', 'LFPH4ABC071A02049', 'LFP84ACCXF1A34066', 'LFPH4ABC181A05768', 'LFPH4ABC281E13034', 'LFP84ACC3D1A21155', 'LFP84ACE2E1A96710', 'LFP84ACE8E1A26838', 'LFP84ACC0E1A60500', 'LFPH4ABC379017773', 'LFPH4ABC059014150', 'LFPH4ABC291A26324', 'LFP84ACC5C1A74826', 'LFPH4ABC071A36492', 'LFPH4ABC491A68798', 'LFPH4ABC471A23342', 'LFPH4ABC391A35744', 'LFPH4ABC081A49888', 'LFP84ACE2C1A66913', 'LFPH4ABC081A47932', 'LFPH4ABC391A30088', 'LFP84ACE6E1E18085', 'LFPH4ABC491A11064', 'LFPH4ABC381A58035', 'LFPH4ABC281A52887', 'LFPH4ABC381A06176', 'LFPH4ABC071A34483', 'LFPH4ABC371A35305', '1J4NF4FB0BD265320', 'LFP84ACC0C1A82851', 'LFPH4ABC281A89180', 'LFPH4ABC059012303', 'LFPH4ABC281A86523', 'LFPH4ABC379007051', 'LFPH4ABC491A37390', 'LFPH4ABC2A1A27543', 'LFPH4ABC069017163', 'LFPH4ABC069022072', 'LFPH4ABC171A53589', 'LFPH4ABC481A51479', 'LFPH4ABC471A09036', 'LFPH4ABC471A22904', 'LFPH4ABC081A83216', 'LFPH4ABC171A16638', 'LFP84ACEXE1E14556', 'LFPH4ABC291A56780', 'LFPH4ABC191A14827', 'LFPH4ABC381A90967', 'LFP84ACC3D1A23794', 'LFP84ACE8F1A06624', 'LFPH4ABC079008481', 'LFPH4ABC381A03097', 'LFP84ACE1E1A29113', 'LFP84ACE1F1A30876', 'LFPH4ABC481E11866', 'LFPH4ABC3A1A00013', 'LFPH4ABC269005693', 'LDC931L29A0184675', 'LFPH4ABC469012340', 'LFPH4ABC081E08673', 'LFPH4ABC291A01536', 'LFP84ACE5F1A83385', 'LFPH4ABC069048185', 'LFPH4ABC159002167', 'LFPH4ABC1A1A19739', 'LFPH4ABC479000187', 'LFPH4ABC381A40280', 'LFPH4ABC281A46054', 'LFPH4ABC391A06941', 'LFPH4ABC249028422', 'LFPH4ABC079021179', 'LFPH4ABC291A35000', 'LFPH4ABC269028679', 'LFPH4ABC481A38666', 'LFPH4ABC171A50451', 'LFPH4ABC359024039', 'LFPH4ABC269013549', 'LFPH4ABC081A96502', 'LFPH4ABC391A92994', 'LFP84ACE3E1A85229', 'LFPH4ABC391A03960', 'LFPH4ABC481A29952', 'LDNM43GZ790252890', 'LFPH4ABC269015138', 'LFP84ACP1D1A87108', 'LFPH4ABC291A17509', 'LFPH4ABC179007291', 'LFPH4ABC291A39574', 'LFPH4ABC1A1A22690', 'LFPH4ABC259001917', 'LFPH4ABC181A29861', 'LFP84ACC9E1A89879', 'LFPH4ABC391A05949', 'LFPH4ABC091A12468', 'LFPH4ABC281A27472', 'LFPH4ABC069050017', 'LFPH4ABC369018369', 'LFPH4ABC459049547', 'LFPH4ABC391A14988', 'LFPH4ABC191A15881', 'LFPH4ABC191A65695', 'LFPH4ABC059014701']

class VINTest(CrawlSpider):
    name = 'vin_test'
    custom_settings = {
        'REDIRECT_ENABLED'      : False,
        'CONCURRENT_REQUESTS'   : 5,
        'DOWNLOAD_DELAY'   : 1,
        'DOWNLOAD_TIMEOUT'      : 10,
        'RETRY_TIMES'           : 50,
        'ITEM_PIPELINES'        : {
            'ISpider.pipelines.ISpiderRankInfoPipeline': 300,
        },
        'DOWNLOADER_MIDDLEWARES': {
            'ISpider.middleware.middlewares.RemoveCookieMiddleware'     : 690,
            'scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware': 750,
            'ISpider.middleware.middlewares.UserAgentMiddleware'        : 730,
            'ISpider.middleware.middlewares.RandomProxyMiddleware'      : 745,
        }
    }
    
    def __init__(self, category=None, *args, **kwargs):
        super(VINTest, self).__init__(*args, **kwargs)
        self.category = category
        self.vin_list = []
        self.status = {}
        with open('%s/pass.grep' % RESOURCE_DIR, 'r+') as f:
            for line in f:
                vin_code = line.split('\t')[0]
                if validate(vin_code)['status'] == 0 and vin_code not in wrong_list and vin_code not in wrong_list:
                    self.vin_list.append(vin_code)
                    self.status[vin_code] = 0
        self.fp = None
        self.mode = mode[self.category or 'city']
        # self.logger = logging.getLogger()
    
    def start_requests(self):
        for vin_code in self.vin_list:
            yield FormRequest('http://www.vin114.net/carpart/carmoduleinfo/vinresolve.jhtml',
                              formdata={'vinCode': vin_code},
                              meta={'type': 'getSecretCode', 'vin_code': vin_code},
                              dont_filter=True)
    
    def parse(self, response):
        try:
            data = json.loads(response.body_as_unicode())
        except Exception, e:
            self.logger.error(e)
        if data['code'] == 'S1':
            out_s = '%s\t%s\n' % (response.meta['vin_code'], data['message']['levelIds'])
            self.logger.info(out_s.strip())
            self.fp = open('%s/out.txt' % RESOURCE_DIR, 'a+')
            self.fp.write(out_s)
            self.fp.close()
            # del self.vin_list[0]
            yield None
        elif data['code'] == 'S0':
            self.logger.info('wrong code: %s' % response.meta['vin_code'])
            # del self.vin_list[0]
            yield None
        elif data['code'] == 'E1':
            yield FormRequest('http://www.vin114.net/carpart/carmoduleinfo/vinresolve.jhtml',
                              formdata={'vinCode': response.meta['vin_code']},
                              meta={'type': 'getSecretCode', 'vin_code': response.meta['vin_code']},
                              dont_filter=True)
    

def validate(vin_code):
    vin_code = vin_code.upper()
    if type(vin_code) == unicode:
        vin_code = vin_code.encode('utf8')
    # 位数校验
    if len(vin_code) != 17:
        return {'status': -1, 'msg': 'wrong vin code: wrong length'}
    # 字母合法性校验
    for i in vin_code:
        if i not in 'ABCDEFGHJKLMNPRSTUVWXYZ1234567890':
            return {'status': -1, 'msg': 'wrong vin code: illegal letter "%s"' % i}
    # 年份识别码校验
    # if get_year_code(model_name) != vin_code[9]:
    #     return False, 2
    # 地理区域识别码校验
    # if vin_code[0] not in GEOGRAPHICAL_REGION:
    #     return False, 'wrong geographical region code'
    # 过滤全数字 vin 码
    if vin_code.isdigit():
        return {'status': -1, 'msg': 'wrong vin code: all character are number'}
    # 过滤全字母 vin 码
    if vin_code.isalpha():
        return {'status': -1, 'msg': 'wrong vin code: all character are letter'}
    # 后三位均为数字
    if not vin_code[-3:].isdigit():
        return {'status': -1, 'msg': 'wrong vin code: last 3 characters are not all number'}
    return {'status': 0, 'msg': 'pass!'}
    

if __name__ == '__main__':
    execute('scrapy crawl vin_test'.split(' '))
